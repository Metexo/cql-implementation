PARSER_BEGIN(CQLParser)
import java.io.Reader;
import java.io.StringReader;

public class CQLParser {
    public CQLParser(String query)
    {
        this((Reader)(new StringReader(query)));
    }

    public static void main(String args[])
    {
        try
        {
            String query = "select * from tabela1";
            CQLParser parser = new CQLParser(query);
	    parser.parse();
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
}
PARSER_END(CQLParser)
SKIP :
{
        " "
        | "\t"
        | "\r"
        | "\n"
}
TOKEN: /*RESERVED TOKENS FOR UQL */
{
           <SELECT: "SELECT" | "select">
        |  <STAR:  "*">
        |  <FROM: "FROM" | "from">
        |  <WHERE: "WHERE" | "where">
		|  <AND: "AND" | "and">
		|  <OR: "OR" | "or">
        |  <AVG: "AVG" | "avg">
        |  <SUM: "SUM" | "sum">
        |  <LPAREN: "(">
        |  <RPAREN: ")">
        |  <EQUALS: "=">
        |  <COMMA: ",">
        |  <LOWER: "<">
		|  <GRATER: ">">
		|  <LESSEREQUAL: "<=">
		|  <GRATEREQUAL: ">=">
		|  <WINDOW: "[RANGE " (["0"-"9"])+"]">
		|  <NUMBER: (["0"-"9"])+>
        |  <STRING: (["A"-"Z", "a"-"z", "0"-"9"])+ >
		|  <STRINGCOMMA: (["A"-"Z", "a"-"z", "0"-"9"])+"," >
        |  <QUOTED_STRING: "\"" (~["\""])+ "\"" >
}

void parse() :
{
}
{            
	selection() fromWhere() (withCondition())? <EOF>
}
void selection() :
{
}
{
	<SELECT> ( (<STRINGCOMMA> | aggregation())+ | <STAR> | <STRING>)?
}
void aggregation() :
{
}
{
	(<AVG> | <SUM>) <LPAREN> <STRING> <RPAREN>
}
void fromWhere() :
{
}
{
	<FROM> <STRING> (<WINDOW>)?
}
void withCondition() :
{
}
{
	<WHERE> condition() ((<OR> | <AND>) condition())*
}
void condition() :
{
}
{
	<STRING> (<EQUALS> | <LOWER> | <GRATER> | <LESSEREQUAL> | <GRATEREQUAL>) <NUMBER>
}